{"version":3,"sources":["services/movies-api.js","components/MoviesList/MoviesList.js","views/MoviesView.module.css","views/MoviesView.js"],"names":["API_KEY","BASE_URL","fetchTrendingMovies","axios","get","then","response","data","results","fetchMoviesByQuery","query","fetchMoviesFromState","search","fetchMovieById","movieId","withRouter","moviesList","location","map","movie","to","pathname","id","state","from","title","module","exports","MoviesView","formSubmitHandler","e","preventDefault","onQueryChange","setState","catch","error","finally","props","history","push","queryHandler","target","value","this","className","styles","container","SearchForm","onSubmit","SearchForm__input","type","autoComplete","placeholder","autoFocus","onChange","Component"],"mappings":"yIAAA,6JAEMA,EAAU,mCACVC,EAAW,+BAEXC,EAAsB,WACxB,OAAOC,IACFC,IADE,UACKH,EADL,uCAC4CD,IAC9CK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAGlCC,EAAqB,SAAAC,GACvB,OAAOP,IAAMC,IAAN,UACAH,EADA,+BAC+BS,EAD/B,oBACgDV,KAIrDW,EAAuB,SAAAC,GACzB,OAAOT,IAAMC,IAAN,UAAaH,EAAb,wBAAqCW,EAArC,oBAAuDZ,KAG5Da,EAAiB,SAAAC,GACnB,OAAOX,IAAMC,IAAN,UACAH,EADA,kBACkBa,EADlB,oBACqCd,EADrC,yD,2FCEIe,eArBI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC9B,OACI,6BACKD,EAAWE,KAAI,SAAAC,GAAK,OACjB,6BACI,cAAC,IAAD,CACIC,GAAI,CACAC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CACHC,KAAMP,IAJlB,SAQKE,EAAMM,SATNN,EAAMG,a,mBCN/BI,EAAOC,QAAU,CAAC,UAAY,8BAA8B,kBAAoB,wC,0HCO1EC,E,4MACFL,MAAQ,CACJb,MAAO,GACPM,WAAY,I,EAkBhBa,kBAAoB,SAAAC,GAChBA,EAAEC,iBACF,EAAKC,cAAc,EAAKT,MAAMb,OAE9BD,YAAmB,EAAKc,MAAMb,OACzBL,MAAK,SAAAC,GACF,EAAK2B,SAAS,CAAEjB,WAAYV,EAASC,KAAKC,aAM7C0B,OAAM,SAAAC,GAAK,OAAI,EAAKF,SAAS,CAAEE,MAAOA,OACtCC,QAAQ,EAAKH,SAAS,CAAEvB,MAAO,O,EAGxCsB,cAAgB,SAAAtB,GACZ,EAAK2B,MAAMC,QAAQC,KAAK,CACpBlB,SAAU,EAAKgB,MAAMpB,SAASI,SAC9BT,OAAO,UAAD,OAAYF,M,EAI1B8B,aAAe,SAAAV,GACX,EAAKG,SAAS,CAAEvB,MAAOoB,EAAEW,OAAOC,S,uDAvCpC,WAAqB,IAAD,OACZC,KAAKN,MAAMpB,SAASL,QACpBD,YAAqBgC,KAAKN,MAAMpB,SAASL,QACpCP,MAAK,SAAAC,GACF,EAAK2B,SAAS,CAAEjB,WAAYV,EAASC,KAAKC,aAM7C0B,OAAM,SAAAC,GAAK,OAAI,EAAKF,SAAS,CAAEE,MAAOA,OACtCC,QAAQO,KAAKV,SAAS,CAAEvB,MAAO,Q,oBA+B5C,WACI,OACI,sBAAKkC,UAAWC,IAAOC,UAAvB,UACI,uBACIF,UAAWC,IAAOE,WAClBC,SAAUL,KAAKd,kBAFnB,UAII,uBACIe,UAAWC,IAAOI,kBAClBC,KAAK,OACLC,aAAa,MACbC,YAAY,sBACZC,WAAS,EACTX,MAAOC,KAAKpB,MAAMb,MAClB4C,SAAUX,KAAKH,eAEnB,wBAAQU,KAAK,SAASN,UAAU,oBAAhC,uBAIHD,KAAKpB,MAAMP,YACR,cAAC,IAAD,CAAYA,WAAY2B,KAAKpB,MAAMP,oB,GArE9BuC,aA4EV3B","file":"static/js/movies-view.5b755caa.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bf0957773382584d05a14ff44449aecb';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = () => {\n    return axios\n        .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n        .then(response => response.data.results);\n};\n\nconst fetchMoviesByQuery = query => {\n    return axios.get(\n        `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`,\n    );\n};\n\nconst fetchMoviesFromState = search => {\n    return axios.get(`${BASE_URL}/search/movie${search}&api_key=${API_KEY}`);\n};\n\nconst fetchMovieById = movieId => {\n    return axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US&append_to_response=reviews,credits`,\n    );\n};\n\nexport {\n    fetchTrendingMovies,\n    fetchMoviesByQuery,\n    fetchMoviesFromState,\n    fetchMovieById,\n};\n","import PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst MoviesList = ({ moviesList, location }) => {\n    return (\n        <ul>\n            {moviesList.map(movie => (\n                <li key={movie.id}>\n                    <Link\n                        to={{\n                            pathname: `/movies/${movie.id}`,\n                            state: {\n                                from: location,\n                            },\n                        }}\n                    >\n                        {movie.title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default withRouter(MoviesList);\n\nMoviesList.propTypes = {\n    moviesList: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoviesView_container__1jEwH\",\"SearchForm__input\":\"MoviesView_SearchForm__input__1I_Hu\"};","import { Component } from 'react';\nimport MoviesList from '../components/MoviesList';\nimport {\n    fetchMoviesFromState,\n    fetchMoviesByQuery,\n} from '../services/movies-api';\nimport styles from './MoviesView.module.css';\n\nclass MoviesView extends Component {\n    state = {\n        query: '',\n        moviesList: [],\n    };\n\n    componentDidMount() {\n        if (this.props.location.search) {\n            fetchMoviesFromState(this.props.location.search)\n                .then(response => {\n                    this.setState({ moviesList: response.data.results });\n                    // localStorage.setItem(\n                    //     'moviesWasFound',\n                    //     JSON.stringify(this.state.moviesList),\n                    // );\n                })\n                .catch(error => this.setState({ error: error }))\n                .finally(this.setState({ query: '' }));\n        }\n    }\n\n    formSubmitHandler = e => {\n        e.preventDefault();\n        this.onQueryChange(this.state.query);\n\n        fetchMoviesByQuery(this.state.query)\n            .then(response => {\n                this.setState({ moviesList: response.data.results });\n                // localStorage.setItem(\n                //     'moviesWasFound',\n                //     JSON.stringify(this.state.moviesList),\n                // );\n            })\n            .catch(error => this.setState({ error: error }))\n            .finally(this.setState({ query: '' }));\n    };\n\n    onQueryChange = query => {\n        this.props.history.push({\n            pathname: this.props.location.pathname,\n            search: `?query=${query}`,\n        });\n    };\n\n    queryHandler = e => {\n        this.setState({ query: e.target.value });\n    };\n\n    render() {\n        return (\n            <div className={styles.container}>\n                <form\n                    className={styles.SearchForm}\n                    onSubmit={this.formSubmitHandler}\n                >\n                    <input\n                        className={styles.SearchForm__input}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        placeholder=\"input movie's title\"\n                        autoFocus\n                        value={this.state.query}\n                        onChange={this.queryHandler}\n                    ></input>\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        Search\n                    </button>\n                </form>\n                {this.state.moviesList && (\n                    <MoviesList moviesList={this.state.moviesList} />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default MoviesView;\n"],"sourceRoot":""}