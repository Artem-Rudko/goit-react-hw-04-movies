{"version":3,"sources":["components/Navigation/Navigation.module.css","views/MoviesView.module.css","components/MovieCard/MovieCard.module.css","views/MovieDetailsView.module.css","views/HomeView.module.css","components/AppBar/AppBar.module.css","components/MoviesList/MoviesList.js","services/movies-api.js","views/HomeView.js","views/MoviesView.js","components/Cast.js","components/MovieCard/MovieCard.js","components/Reviews.js","routes.js","views/MovieDetailsView.js","components/Navigation/Navigation.js","components/AppBar/AppBar.js","App.js","index.js"],"names":["module","exports","withRouter","moviesList","location","map","movie","to","pathname","id","state","from","title","API_KEY","BASE_URL","fetchMoviesByQuery","query","axios","get","fetchMovieById","movieId","HomeView","a","then","response","data","results","this","setState","className","styles","container","container__title","Component","MoviesView","formSubmitHandler","e","preventDefault","onQueryChange","localStorage","setItem","JSON","stringify","catch","error","finally","props","history","push","search","queryHandler","target","value","SearchForm","onSubmit","SearchForm__input","type","autoComplete","placeholder","autoFocus","onChange","Cast","cast","hero","src","profile_path","alt","name","character","MovieCard","poster_path","vote_average","overview","genres","console","log","movie__card","movie__poster","style","width","movie__info","genre","Reviews","reviews","length","review","author","content","MovieDetailsPage","credits","handleGoBack","routes","match","params","returnBtn","onClick","addInfo","url","exact","path","render","Navigation","navigation","navigation__item","NavLink","activeClassName","Navigation__item","AppBar","App","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.194429d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__2Pqah\",\"NavLink\":\"Navigation_NavLink__2ckx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoviesView_container__1jEwH\",\"SearchForm__input\":\"MoviesView_SearchForm__input__1I_Hu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie__card\":\"MovieCard_movie__card__2JkrU\",\"movie__poster\":\"MovieCard_movie__poster__3PyFm\",\"movie__info\":\"MovieCard_movie__info__159z_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieDetailsView_container__202r1\",\"returnBtn\":\"MovieDetailsView_returnBtn__2DUFR\",\"addInfo\":\"MovieDetailsView_addInfo__1BYhI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeView_container__ehltt\",\"container__title\":\"HomeView_container__title__1CiTj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__1JrdE\"};","import PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst MoviesList = ({ moviesList, location }) => {\n    return (\n        <ul>\n            {moviesList.map(movie => (\n                <li key={movie.id}>\n                    <Link\n                        to={{\n                            pathname: `/movies/${movie.id}`,\n                            state: {\n                                from: location,\n                            },\n                        }}\n                    >\n                        {movie.title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default withRouter(MoviesList);\n\nMoviesList.propTypes = {\n    moviesList: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'bf0957773382584d05a14ff44449aecb';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = () => {\n    return axios\n        .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n        .then(response => response.data.results);\n};\n\nconst fetchMoviesByQuery = query => {\n    return axios.get(\n        `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`,\n    );\n};\n\nconst fetchMoviesFromState = search => {\n    return axios.get(`${BASE_URL}/search/movie${search}&api_key=${API_KEY}`);\n};\n\nconst fetchMovieById = movieId => {\n    return axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US&append_to_response=reviews,credits`,\n    );\n};\n\nexport {\n    fetchTrendingMovies,\n    fetchMoviesByQuery,\n    fetchMoviesFromState,\n    fetchMovieById,\n};\n","import { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport MoviesList from '../components/MoviesList';\nimport { fetchTrendingMovies } from '../services/movies-api';\nimport styles from './HomeView.module.css';\n\nclass HomeView extends Component {\n    state = {\n        moviesList: [],\n    };\n\n    async componentDidMount() {\n        const results = await fetchTrendingMovies();\n        this.setState({ moviesList: results });\n    }\n\n    render() {\n        return (\n            <div className={styles.container}>\n                <h1 className={styles.container__title}>Tranding today</h1>\n                <MoviesList moviesList={this.state.moviesList} />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(HomeView);\n","import { Component } from 'react';\n// import { Route } from 'react-router-dom';\n// import axios from 'axios';\nimport MoviesList from '../components/MoviesList';\nimport {\n    fetchMoviesFromState,\n    fetchMoviesByQuery,\n} from '../services/movies-api';\nimport styles from './MoviesView.module.css';\n\nclass MoviesView extends Component {\n    state = {\n        query: '',\n        moviesList: [],\n    };\n\n    componentDidMount() {\n        if (this.props.location.search) {\n            fetchMoviesFromState(this.props.location.search)\n                .then(response => {\n                    this.setState({ moviesList: response.data.results });\n                    // console.log('state after get', this.state);\n                    // localStorage.setItem(\n                    //     'moviesWasFound',\n                    //     JSON.stringify(this.state.moviesList),\n                    // );\n                })\n                .catch(error => this.setState({ error: error }))\n                .finally(this.setState({ query: '' }));\n        }\n    }\n\n    formSubmitHandler = e => {\n        e.preventDefault();\n        // console.log('submitHandler', this.state.query);\n\n        this.onQueryChange(this.state.query);\n\n        fetchMoviesByQuery(this.state.query)\n            .then(response => {\n                this.setState({ moviesList: response.data.results });\n                // console.log('state after get', this.state);\n                localStorage.setItem(\n                    'moviesWasFound',\n                    JSON.stringify(this.state.moviesList),\n                );\n            })\n            .catch(error => this.setState({ error: error }))\n            .finally(this.setState({ query: '' }));\n    };\n\n    onQueryChange = query => {\n        this.props.history.push({\n            pathname: this.props.location.pathname,\n            search: `?query=${query}`,\n        });\n    };\n\n    queryHandler = e => {\n        this.setState({ query: e.target.value });\n        // console.log('input', this.state);\n    };\n\n    render() {\n        return (\n            <div className={styles.container}>\n                <form\n                    className={styles.SearchForm}\n                    onSubmit={this.formSubmitHandler}\n                >\n                    <input\n                        className={styles.SearchForm__input}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        placeholder=\"input movie's title\"\n                        autoFocus\n                        value={this.state.query}\n                        onChange={this.queryHandler}\n                    ></input>\n                    {/* <Link to={`${this.props.match.url}?query=${this.state.query}`}> */}\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        Search\n                    </button>\n                    {/* </Link> */}\n                </form>\n                {/*                <Route\n                    path={`${this.props.match.path}?query=`}\n                    render={props => (<MoviesList {...props} moviesList={this.state.moviesList}/>)}\n                    /> */}\n                {this.state.moviesList && (\n                    <MoviesList moviesList={this.state.moviesList} />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default MoviesView;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Cast extends Component {\n    state = {\n        cast: [],\n    };\n\n    componentDidMount() {\n        // console.log('cast', this.props.cast);\n        this.setState({ cast: this.props.cast });\n    }\n\n    componentDidUpdate() {\n        // this.setState({ cast: this.props.cast})\n    }\n\n    render() {\n        const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w200';\n\n        return (\n            <ul>\n                {this.state.cast.map(hero => (\n                    <li key={hero.id}>\n                        <img\n                            src={`${BASE_IMG_URL}${hero.profile_path}`}\n                            // src={`https://image.tmdb.org/t/p/w200}${hero.profile_path}`}\n                            alt={hero.name}\n                        ></img>\n                        <p>{hero.name}</p>\n                        <p>Character: {hero.character}</p>\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\n\nexport default Cast;\n\nCast.propTypes = {\n    cast: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        profile_path: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired,\n    }),\n};\n","// import PropTypes from 'prop-types';\nimport styles from './MovieCard.module.css';\n\nconst MovieCard = ({ poster_path, title, vote_average, overview, genres }) => {\n    console.log(\n        'overview',\n        typeof overview,\n        'vote_average',\n        typeof vote_average,\n    );\n\n    return (\n        <div className={styles.movie__card}>\n            <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt=\"#\"\n                className={styles.movie__poster}\n                style={{ width: 260 }}\n            ></img>\n            <div className={styles.movie__info}>\n                <h2>{title}</h2>\n                <p>User score: {vote_average}</p>\n\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>\n                    {genres.map(genre => (\n                        <span key={genre.name}>{genre.name} </span>\n                    ))}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default MovieCard;\n\n// MovieCard.propTypes = {\n//     poster_path: PropTypes.string.isRequired,\n//     title: PropTypes.string.isRequired,\n//     vote_average: PropTypes.number,\n//     overview: PropTypes.string,\n//     genres: PropTypes.array,\n// }\n","import { Component } from 'react';\n\nclass Reviews extends Component {\n    state = {\n        reviews: [],\n    };\n\n    componentDidMount() {\n        this.setState({ reviews: this.props.reviews });\n    }\n\n    componentDidUpdate() {\n        // this.setState({ cast: this.props.reviews})\n    }\n\n    render() {\n        return (\n            <ul>\n                {this.state.reviews.length > 0 ? (\n                    this.state.reviews.map(review => (\n                        <li key={review.id}>\n                            <h2>{review.author}</h2>\n                            <p>{review.content}</p>\n                        </li>\n                    ))\n                ) : (\n                    <p>We don't have any revies about this movie.</p>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default Reviews;\n","/* eslint-disable import/no-anonymous-default-export */\nexport default {\n    home: '/',\n    movies: '/moviews',\n    movieDetails: '/movies/:movieId',\n};\n","import { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport Cast from '../components/Cast';\nimport MovieCard from '../components/MovieCard';\nimport Reviews from '../components/Reviews';\nimport routes from '../routes';\nimport { fetchMovieById } from '../services/movies-api';\nimport styles from './MovieDetailsView.module.css';\n\nclass MovieDetailsPage extends Component {\n    state = {\n        id: '',\n        poster_path: '',\n        title: '',\n        vote_average: '',\n        overview: [],\n        genres: [],\n        credits: [],\n        reviews: [],\n    };\n\n    async componentDidMount() {\n        const { movieId } = this.props.match.params;\n        const response = await fetchMovieById(movieId);\n        this.setState({ ...response.data });\n    }\n\n    handleGoBack = () => {\n        const { location, history } = this.props;\n        history.push(location?.state?.from || routes.home);\n    };\n\n    render() {\n        const {\n            poster_path,\n            title,\n            vote_average,\n            overview,\n            genres,\n            reviews,\n            credits,\n        } = this.state;\n\n        return (\n            <div className={styles.container}>\n                <div>\n                    <button\n                        className={styles.returnBtn}\n                        type=\"button\"\n                        onClick={this.handleGoBack}\n                    >\n                        Go back\n                    </button>\n                    <MovieCard\n                        poster_path={poster_path}\n                        title={title}\n                        vote_average={vote_average}\n                        overview={overview}\n                        genres={genres}\n                    />\n                </div>\n                <div>\n                    <div className={styles.addInfo}>\n                        <p>Additional information</p>\n                        <ul>\n                            <li>\n                                <Link to={`${this.props.match.url}/cast`}>\n                                    Cast\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to={`${this.props.match.url}/reviews`}>\n                                    Reviews\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <Route\n                        exact\n                        path={`${this.props.match.path}/cast`}\n                        render={props => (\n                            <Cast {...props} cast={credits.cast} />\n                        )}\n                    />\n                    <Route\n                        exact\n                        path={`${this.props.match.path}/reviews`}\n                        render={props => (\n                            <Reviews {...props} reviews={reviews.results} />\n                        )}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MovieDetailsPage;\n","import { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\nimport styles from './Navigation.module.css';\n\nconst Navigation = () => {\n    return (\n        <ul className={styles.navigation}>\n            <li className={styles.navigation__item}>\n                <NavLink\n                    exact\n                    to={routes.home}\n                    className={styles.NavLink}\n                    activeClassName=\"NavLink--active\"\n                >\n                    Home\n                </NavLink>\n            </li>\n            <li className={styles.Navigation__item}>\n                <NavLink\n                    to={routes.movies}\n                    className={styles.NavLink}\n                    activeClassName=\"NavLink--active\"\n                >\n                    Movies\n                </NavLink>\n            </li>\n        </ul>\n    );\n};\n\nexport default Navigation;\n","import Navigation from '../Navigation';\nimport styles from './AppBar.module.css';\n\nconst AppBar = () => {\n    return (\n        <div className={styles.AppBar}>\n            <header>\n                <Navigation />\n            </header>\n        </div>\n    );\n};\n\nexport default AppBar;\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport HomeView from './views/HomeView';\nimport MoviesView from './views/MoviesView';\nimport MovieDetailsPage from './views/MovieDetailsView';\nimport routes from './routes';\nimport AppBar from './components/AppBar/AppBar';\nimport './styles.css';\n\nconst App = () => (\n    <>\n        <AppBar />\n        <Switch>\n            <Route exact path={routes.home} component={HomeView} />\n            <Route path={routes.movieDetails} component={MovieDetailsPage} />\n            <Route path={routes.movies} component={MoviesView} />\n            <Redirect to={routes.home} />\n        </Switch>\n    </>\n);\n\n// App.defaultProps = {};\n\n// App.propTypes = {};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}