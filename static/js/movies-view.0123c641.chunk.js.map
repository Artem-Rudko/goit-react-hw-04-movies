{"version":3,"sources":["services/movies-api.js","components/MoviesList/MoviesList.js","views/MoviesView.module.css","views/MoviesView.js"],"names":["API_KEY","BASE_URL","fetchTrendingMovies","axios","get","then","response","data","results","fetchMoviesByQuery","query","fetchMoviesFromState","search","fetchMovieById","movieId","withRouter","moviesList","location","map","movie","to","pathname","id","state","from","title","module","exports","MoviesView","formSubmitHandler","e","preventDefault","onQueryChange","setState","catch","error","finally","props","history","push","queryHandler","target","value","this","className","styles","container","SearchForm","onSubmit","SearchForm__input","type","autoComplete","placeholder","autoFocus","onChange","Component"],"mappings":"yIAAA,6JAEMA,EAAU,mCACVC,EAAW,+BAEXC,EAAsB,WACxB,OAAOC,IACFC,IADE,UACKH,EADL,uCAC4CD,IAC9CK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAGlCC,EAAqB,SAAAC,GACvB,OAAOP,IAAMC,IAAN,UACAH,EADA,+BAC+BS,EAD/B,oBACgDV,KAIrDW,EAAuB,SAAAC,GACzB,OAAOT,IAAMC,IAAN,UAAaH,EAAb,wBAAqCW,EAArC,oBAAuDZ,KAG5Da,EAAiB,SAAAC,GACnB,OAAOX,IAAMC,IAAN,UACAH,EADA,kBACkBa,EADlB,oBACqCd,EADrC,yD,2FCEIe,eArBI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC9B,OACI,6BACKD,EAAWE,KAAI,SAAAC,GAAK,OACjB,6BACI,cAAC,IAAD,CACIC,GAAI,CACAC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CACHC,KAAMP,IAJlB,SAQKE,EAAMM,SATNN,EAAMG,a,mBCN/BI,EAAOC,QAAU,CAAC,UAAY,8BAA8B,kBAAoB,wC,0HCO1EC,E,4MACFL,MAAQ,CACJb,MAAO,GACPM,WAAY,I,EAkBhBa,kBAAoB,SAAAC,GAChBA,EAAEC,iBACF,EAAKC,cAAc,EAAKT,MAAMb,OAE9BD,YAAmB,EAAKc,MAAMb,OACzBL,MAAK,SAAAC,GACF,EAAK2B,SAAS,CAAEjB,WAAYV,EAASC,KAAKC,aAM7C0B,OAAM,SAAAC,GAAK,OAAI,EAAKF,SAAS,CAAEE,MAAOA,OACtCC,QAAQ,EAAKH,SAAS,CAAEvB,MAAO,O,EAGxCsB,cAAgB,SAAAtB,GACZ,EAAK2B,MAAMC,QAAQC,KAAK,CACpBlB,SAAU,EAAKgB,MAAMpB,SAASI,SAC9BT,OAAO,UAAD,OAAYF,M,EAI1B8B,aAAe,SAAAV,GACX,EAAKG,SAAS,CAAEvB,MAAOoB,EAAEW,OAAOC,S,uDAvCpC,WAAqB,IAAD,OACZC,KAAKN,MAAMpB,SAASL,QACpBD,YAAqBgC,KAAKN,MAAMpB,SAASL,QACpCP,MAAK,SAAAC,GACF,EAAK2B,SAAS,CAAEjB,WAAYV,EAASC,KAAKC,aAM7C0B,OAAM,SAAAC,GAAK,OAAI,EAAKF,SAAS,CAAEE,MAAOA,OACtCC,QAAQO,KAAKV,SAAS,CAAEvB,MAAO,Q,oBA+B5C,WACI,OACI,sBAAKkC,UAAWC,IAAOC,UAAvB,UACI,uBACIF,UAAWC,IAAOE,WAClBC,SAAUL,KAAKd,kBAFnB,UAII,uBACIe,UAAWC,IAAOI,kBAClBC,KAAK,OACLC,aAAa,MACbC,YAAY,sBACZC,WAAS,EACTX,MAAOC,KAAKpB,MAAMb,MAClB4C,SAAUX,KAAKH,eAEnB,wBAAQU,KAAK,SAASN,UAAU,oBAAhC,uBAIHD,KAAKpB,MAAMP,YACR,cAAC,IAAD,CAAYA,WAAY2B,KAAKpB,MAAMP,oB,GArE9BuC,aA4EV3B","file":"static/js/movies-view.0123c641.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = 'bf0957773382584d05a14ff44449aecb';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst fetchTrendingMovies = () => {\r\n    return axios\r\n        .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\r\n        .then(response => response.data.results);\r\n};\r\n\r\nconst fetchMoviesByQuery = query => {\r\n    return axios.get(\r\n        `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`,\r\n    );\r\n};\r\n\r\nconst fetchMoviesFromState = search => {\r\n    return axios.get(`${BASE_URL}/search/movie${search}&api_key=${API_KEY}`);\r\n};\r\n\r\nconst fetchMovieById = movieId => {\r\n    return axios.get(\r\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US&append_to_response=reviews,credits`,\r\n    );\r\n};\r\n\r\nexport {\r\n    fetchTrendingMovies,\r\n    fetchMoviesByQuery,\r\n    fetchMoviesFromState,\r\n    fetchMovieById,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst MoviesList = ({ moviesList, location }) => {\r\n    return (\r\n        <ul>\r\n            {moviesList.map(movie => (\r\n                <li key={movie.id}>\r\n                    <Link\r\n                        to={{\r\n                            pathname: `/movies/${movie.id}`,\r\n                            state: {\r\n                                from: location,\r\n                            },\r\n                        }}\r\n                    >\r\n                        {movie.title}\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n\r\nMoviesList.propTypes = {\r\n    moviesList: PropTypes.array.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoviesView_container__1nLYa\",\"SearchForm__input\":\"MoviesView_SearchForm__input__3lElJ\"};","import { Component } from 'react';\r\nimport MoviesList from '../components/MoviesList';\r\nimport {\r\n    fetchMoviesFromState,\r\n    fetchMoviesByQuery,\r\n} from '../services/movies-api';\r\nimport styles from './MoviesView.module.css';\r\n\r\nclass MoviesView extends Component {\r\n    state = {\r\n        query: '',\r\n        moviesList: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.search) {\r\n            fetchMoviesFromState(this.props.location.search)\r\n                .then(response => {\r\n                    this.setState({ moviesList: response.data.results });\r\n                    // localStorage.setItem(\r\n                    //     'moviesWasFound',\r\n                    //     JSON.stringify(this.state.moviesList),\r\n                    // );\r\n                })\r\n                .catch(error => this.setState({ error: error }))\r\n                .finally(this.setState({ query: '' }));\r\n        }\r\n    }\r\n\r\n    formSubmitHandler = e => {\r\n        e.preventDefault();\r\n        this.onQueryChange(this.state.query);\r\n\r\n        fetchMoviesByQuery(this.state.query)\r\n            .then(response => {\r\n                this.setState({ moviesList: response.data.results });\r\n                // localStorage.setItem(\r\n                //     'moviesWasFound',\r\n                //     JSON.stringify(this.state.moviesList),\r\n                // );\r\n            })\r\n            .catch(error => this.setState({ error: error }))\r\n            .finally(this.setState({ query: '' }));\r\n    };\r\n\r\n    onQueryChange = query => {\r\n        this.props.history.push({\r\n            pathname: this.props.location.pathname,\r\n            search: `?query=${query}`,\r\n        });\r\n    };\r\n\r\n    queryHandler = e => {\r\n        this.setState({ query: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                <form\r\n                    className={styles.SearchForm}\r\n                    onSubmit={this.formSubmitHandler}\r\n                >\r\n                    <input\r\n                        className={styles.SearchForm__input}\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"input movie's title\"\r\n                        autoFocus\r\n                        value={this.state.query}\r\n                        onChange={this.queryHandler}\r\n                    ></input>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        Search\r\n                    </button>\r\n                </form>\r\n                {this.state.moviesList && (\r\n                    <MoviesList moviesList={this.state.moviesList} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoviesView;\r\n"],"sourceRoot":""}